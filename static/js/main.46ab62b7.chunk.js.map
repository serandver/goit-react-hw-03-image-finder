{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageLoader/ImageLoader.js","components/LoadMoreButton/LoadMoreButton.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","imageName","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","trim","props","onSubmit","reset","toast","error","className","type","onClick","this","autoComplete","onChange","autoFocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","onClickImage","src","alt","ImageLoader","color","height","width","timeout","LoadMoreButton","API_SECRET_KEY","baseURL","ImageGallery","hits","status","currentPage","fetchImages","url","fetch","then","response","ok","json","Promise","reject","Error","data","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","prevProps","message","map","id","length","Modal","handleKeyDown","e","code","toogleModal","handleBackdropClick","target","addEventListener","removeEventListener","largeImage","App","showModal","search","console","log","toggleModal","handleClickImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46ab62b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageName: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.error('empty search field');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"SearchForm-button\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"imageName\"\r\n            onChange={this.handleChange}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  onClickImage,\r\n  imageName,\r\n}) => {\r\n  return (\r\n    <li\r\n      className=\"ImageGalleryItem\"\r\n      onClick={() => onClickImage(largeImageURL)}\r\n    >\r\n      <img\r\n        src={webformatURL}\r\n        alt={imageName}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onClickImage: PropTypes.func,\r\n  imageName: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst ImageLoader = () => {\r\n  return (\r\n    <Loader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n};\r\nexport default ImageLoader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreButton = ({ onClick }) => {\r\n  return (\r\n    <button type=\"submit\" className=\"Button\" onClick={onClick}>\r\n      <span>Load More</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nLoadMoreButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default LoadMoreButton;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport ImageLoader from '../ImageLoader/ImageLoader';\r\nimport LoadMoreButton from '../LoadMoreButton/LoadMoreButton';\r\n\r\nconst API_SECRET_KEY = '23900299-fa2ddfe6bd8026b5b95bcaf8f';\r\nconst baseURL = `https://pixabay.com/api/`;\r\nconst perPage = 12;\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    hits: [],\r\n    error: null,\r\n    status: 'idle',\r\n    currentPage: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const prevImage = prevProps.imageName;\r\n    const nextImage = this.props.imageName;\r\n\r\n    if (prevImage != nextImage) {\r\n      this.setState(\r\n        {\r\n          status: 'pending',\r\n          hits: [],\r\n          currentPage: 1,\r\n        },\r\n        () => this.fetchImages(),\r\n      );\r\n    }\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { imageName } = this.props;\r\n    const url = `${baseURL}?q=${imageName}&page=${this.state.currentPage}&key=${API_SECRET_KEY}&per_page=${perPage}`;\r\n\r\n    fetch(url)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(new Error('Empty result'));\r\n      })\r\n      .then(data => {\r\n        const { hits } = data;\r\n        this.setState(prevState => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          currentPage: prevState.currentPage + 1,\r\n          status: 'resolved',\r\n        }));\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }));\r\n  };\r\n\r\n  render() {\r\n    const { error, status, hits } = this.state;\r\n    const { imageName } = this.props.imageName;\r\n\r\n    if (status === 'idle') {\r\n      return <div></div>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <ImageLoader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <div>{error.message}</div>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                webformatURL={webformatURL}\r\n                onClickImage={this.props.onClickImage}\r\n                largeImageURL={largeImageURL}\r\n                imageName={imageName}\r\n              />\r\n            ))}\r\n            {hits.length > 0 ? (\r\n              <LoadMoreButton onClick={this.fetchImages} />\r\n            ) : (\r\n              <h1>По вашему запросу ничего не найдено.</h1>\r\n            )}\r\n          </ul>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  imageName: PropTypes.string,\r\n  onClickImage: PropTypes.func,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.toogleModal();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget != e.target) {\r\n      this.props.toogleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImage, imageName } = this.props;\r\n    return (\r\n      <>\r\n        <h1>Modal</h1>\r\n        <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n          <div className=\"Modal\">\r\n            <img src={largeImage} alt={imageName} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  toogleModal: PropTypes.func,\r\n  largeImage: PropTypes.string,\r\n  imageName: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    imageName: '',\n    largeImage: null,\n  };\n\n  search = data => {\n    console.log(data);\n    const { imageName } = data;\n    this.setState({ imageName });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handleClickImage = largeImage => {\n    this.setState({ largeImage });\n    this.toggleModal();\n  };\n\n  render() {\n    const { showModal, largeImage, imageName } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.search} />\n        <ImageGallery\n          imageName={this.state.imageName}\n          onClickImage={this.handleClickImage}\n        />\n        {showModal && (\n          <Modal\n            toogleModal={this.toggleModal}\n            largeImage={largeImage}\n            imageName={imageName}\n          />\n        )}\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}